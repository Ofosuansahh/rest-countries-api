{"version":3,"sources":["svgs/moon-outline.svg","svgs/man.png","Components/Header.tsx","hooks/useTheme.tsx","pages/Details/listItems/Item.tsx","Components/Country.tsx","pages/Details/listItems/Borders.tsx","hooks/useFetch.tsx","pages/Details/listItems/ItemList.tsx","pages/Details/Details.tsx","Components/CardList.tsx","Components/ErrorBoundary.tsx","Components/FilterButton.tsx","Components/SearchButton.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","_useTheme","storedTheme","localStorage","getItem","storedImo","_useState","useState","_useState2","_slicedToArray","theme","setTheme","_useState3","_useState4","imo","setImo","useEffect","document","documentElement","setAttribute","setItem","isDarkTheme","onToggleTheme","isDarkImo","useTheme","React","createElement","className","onClick","id","src","moon","man","alt","Item","props","data","description","Data","noData","CountryContext","createContext","CountryProvider","_ref","children","countries","load","filter","word","search","error","Provider","value","DataList","arr","useContext","navigate","useNavigate","cardClicked","e","name","currentTarget","getAttribute","state","undefined","map","el","index","result","final","country","cioc","alpha3Code","item","key","Borders","check","Array","isArray","DataItem","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useFetch","setCountries","loading","setLoading","_useState5","_useState6","setError","_useState7","_useState8","view","setView","_useState9","_useState10","regionKey","setRegionKey","_useState11","_useState12","setWord","_asyncToGenerator","_callee","response","_context","fetch","json","console","log","t0","apply","arguments","fetchData","region","toLowerCase","toDisplay","includes","ItemList","Fragment","display","join","Details","entered","useLocation","output","flag","nativeName","population","toLocaleString","subregion","capital","topLevelDomain","currencies","languages","borders","CardList","event","out","ErrorBoundary","_React$Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","hasError","bind","_assertThisInitialized","_inherits","_createClass","setState","Component","FilterButton","dropdown","setDropdown","buttonRef","useRef","dropDownRef","window","addEventListener","target","current","ref","xmlns","viewBox","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","SearchButton","stroke-miterlimit","placeholder","onChange","Home","_useFetch","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","Router","StrictMode"],"mappings":"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","file":"static/js/main.2ce10075.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon-outline.0b7dd2d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/man.91452371.png\";","import React from \"react\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\n// import sunny from \"../svgs/sunny-outline.svg\";\r\nimport moon from \"../svgs/moon-outline.svg\";\r\nimport man from \"../svgs/man.png\"\r\n\r\nexport const Header = () => {\r\n  const { onToggleTheme, isDarkTheme, isDarkImo } = useTheme();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n        <h1>Where in the world?</h1>\r\n        <div className=\"theme_switch\" onClick={onToggleTheme}>\r\n          <img id=\"theme_logo\" src={isDarkImo ? moon : man} alt=\"logo\" />\r\n          <p>{isDarkTheme ? \"Light Mode\" : \"Dark Mode\"}</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTheme = () => {\r\n  const storedTheme: string = localStorage.getItem(\"Theme\")!;\r\n\r\n  const storedImo: string = localStorage.getItem(\"Imo\")!;\r\n\r\n  const [theme, setTheme] = useState<string>(storedTheme);\r\n  const [imo, setImo] = useState<string>(storedImo);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute(\"dark-theme\", theme);\r\n    localStorage.setItem(\"Theme\", theme);\r\n    localStorage.setItem(\"Imo\", imo);\r\n  }, [theme, imo]);\r\n\r\n  function onToggleTheme() {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\r\n    setImo(imo === \"sunny\" ? \"moon\" : \"sunny\");\r\n  }\r\n\r\n  const isDarkTheme: boolean = theme === \"dark\";\r\n  const isDarkImo: boolean = imo === \"moon\";\r\n\r\n  return { isDarkTheme, onToggleTheme, isDarkImo };\r\n};\r\n","import React from \"react\";\r\n\r\ninterface ItemType {\r\n  data: string | number | string[];\r\n  description: string;\r\n}\r\n\r\nconst noData = (props: string) => {\r\n  return <p>{props}</p>;\r\n};\r\nconst Data = (props: ItemType) => {\r\n  return (\r\n    <p>\r\n      {props.description} <span>{props.data}</span>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport const Item = (props: ItemType) => {\r\n  const data: string | number | string[] = props.data;\r\n  const description: string = props.description;\r\n\r\n  if (data) {\r\n    return Data({ description, data });\r\n  }\r\n  return noData(description);\r\n};\r\n","import React from \"react\";\r\nimport { DataType } from \"./Custom\";\r\n\r\nexport const CountryContext = React.createContext<DataType>({} as DataType);\r\n\r\ninterface Child extends DataType {\r\n  children: React.ReactNode;\r\n}\r\nexport const CountryProvider = ({\r\n  children,\r\n  countries,\r\n  load,\r\n  filter,\r\n  word,\r\n  search,\r\n  error,\r\n}: Child) => {\r\n  return (\r\n    <CountryContext.Provider\r\n      value={{ countries, load, filter, search, word, error }}\r\n    >\r\n      {children}\r\n    </CountryContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  CountryContext,\r\n  CountryProvider,\r\n} from \"../../../Components/Country\";\r\nimport { DataType, CountriesType } from \"../../../Components/Custom\";\r\n\r\ninterface BorderType {\r\n  data: string[];\r\n  description: string;\r\n}\r\n\r\nconst noData = (props: string) => {\r\n  return <p>{props}:</p>;\r\n};\r\nconst DataItem = (props: BorderType) => {\r\n  return (\r\n    <p>\r\n      {props.description}: {props.data}\r\n    </p>\r\n  );\r\n};\r\n\r\nconst DataList = (props: BorderType) => {\r\n  const arr: string[] = props.data;\r\n  const value: DataType = useContext(CountryContext);\r\n\r\n  const countries: CountriesType[] = value.countries;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const cardClicked = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    let name: string = e.currentTarget.getAttribute(\"id\")!;\r\n\r\n    navigate(`/details/`, { state: { name: name } });\r\n  };\r\n\r\n  const Converter = (props: string) => {\r\n    const output: CountriesType[] = countries;\r\n    const result: CountriesType[] = output.filter((country) => {\r\n      return country.cioc === props || country.alpha3Code === props;\r\n    });\r\n    let stored: string[] = result.map((item) => item.name);\r\n    let final: string = stored[0];\r\n\r\n    return { final };\r\n  };\r\n\r\n  return (\r\n    <CountryProvider\r\n      countries={countries}\r\n      search={undefined}\r\n      filter={undefined}\r\n      load={true}\r\n      word={\"\"}\r\n      error={null}\r\n    >\r\n      <p>{props.description} </p>\r\n      {arr.map((el: string, index: number) => {\r\n        const result = Converter(el);\r\n        return (\r\n          <button onClick={cardClicked} id={result.final} key={index}>\r\n            <span>{result.final}</span>{\" \"}\r\n          </button>\r\n        );\r\n      })}\r\n    </CountryProvider>\r\n  );\r\n};\r\n\r\nexport const Borders = (props: BorderType) => {\r\n  const data: string[] = props.data;\r\n  const description: string = props.description;\r\n\r\n  const check: boolean = !Array.isArray(data);\r\n\r\n  if (check) {\r\n    return DataItem(props);\r\n  }\r\n  if (!check) {\r\n    return DataList(props);\r\n  }\r\n  return noData(description);\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { CountriesType } from \"../Components/Custom\";\r\n\r\nconst useFetch = () => {\r\n  const [countries, setCountries] = useState<CountriesType[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<boolean | null | any>(null);\r\n  let [view, setView] = useState<CountriesType[]>([]);\r\n  const [regionKey, setRegionKey] = useState<string | null>(null);\r\n  let [word, setWord] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response: Response = await fetch(\r\n          \"https://restcountries.com/v2/all?fields=name,capital,population,region,nativeName,flag,subregion,languages,currencies,borders,topLevelDomain,cioc,alpha3Code\"\r\n        );\r\n        const data: CountriesType[] = await response.json();\r\n        console.log(data);\r\n        setLoading(false);\r\n        setCountries(data);\r\n        setView(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const search = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const word: string = e.currentTarget.value.toLowerCase();\r\n    setWord(word);\r\n  };\r\n\r\n  const region = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    const key: string = e.currentTarget.id.toLowerCase();\r\n\r\n    let toDisplay: CountriesType[] = countries.filter((country) =>\r\n      country.region.toLowerCase().includes(key)\r\n    );\r\n    setView(toDisplay);\r\n    setRegionKey(key);\r\n  };\r\n\r\n  return { countries, view, region, search, regionKey, word, loading, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\nimport { Currencies, Languages } from \"../../../Components/Custom\";\r\n\r\ninterface ItemArrayType {\r\n  data: Currencies[] | Languages[];\r\n  description: string;\r\n}\r\n\r\nconst noData = (props: string) => {\r\n  return <p>{props}</p>;\r\n};\r\n\r\nconst DataItem = (props: ItemArrayType) => {\r\n  return (\r\n    <>\r\n      {props.description}\r\n      {props.data}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DataList = (props: ItemArrayType) => {\r\n  const arr: Currencies[] | Languages[] = props.data;\r\n  let display: string = arr\r\n    .map((el) => {\r\n      return el.name;\r\n    })\r\n    .join(\", \");\r\n  console.log(\"display\", display);\r\n\r\n  return (\r\n    <p>\r\n      {props.description}\r\n      <span>{display}</span>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport const ItemList = (props: ItemArrayType) => {\r\n  const data: Currencies[] | Languages[] = props.data;\r\n  const description: string = props.description;\r\n\r\n  const check: boolean = !Array.isArray(data);\r\n\r\n  if (check) {\r\n    return DataItem({ data, description });\r\n  }\r\n  if (!check) {\r\n    return DataList({ data, description });\r\n  }\r\n  return noData(description);\r\n};\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { NavigateFunction, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Item } from \"./listItems/Item\";\r\nimport { Borders } from \"./listItems/Borders\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { CountryProvider } from \"../../Components/Country\";\r\nimport { ItemList } from \"./listItems/ItemList\";\r\nimport { CountriesType } from \"../../Components/Custom\";\r\n\r\nexport const Details = () => {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const navigateBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const value = useFetch();\r\n\r\n  const keyword = useLocation();\r\n\r\n  const entered: string = keyword.state.name;\r\n  const data: CountriesType[] = value.countries;\r\n\r\n  const loading: boolean = value.loading;\r\n  const output: CountriesType[] = data.filter((country) => {\r\n    return country.name.toLowerCase() === entered.toLowerCase();\r\n  });\r\n  if (loading) return <p className=\"Loader\">Loading...</p>;\r\n  return (\r\n    <div>\r\n      <div className=\"details_top\">\r\n        <div className=\"back_container\">\r\n          <button id=\"back\" onClick={navigateBack}>\r\n            <p> &larr; &nbsp;Back</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"details_bottom\">\r\n        {output.map((item) => {\r\n          return (\r\n            <>\r\n              <div className=\"details_container\">\r\n                <div className=\"flag_container\">\r\n                  <img alt=\"flag\" src={item.flag} />\r\n                </div>\r\n                <div className=\"details_section\">\r\n                  <p id=\"country_name\">{item.name}</p>\r\n                  <div className=\"country_details\">\r\n                    <div className=\"details_left\">\r\n                      <Item\r\n                        data={item.nativeName}\r\n                        description={\"Native Name: \"}\r\n                      />\r\n                      <Item\r\n                        data={item.population.toLocaleString()}\r\n                        description={\"Population: \"}\r\n                      />\r\n                      <Item data={item.region} description={\"Region: \"} />\r\n                      <Item\r\n                        data={item.subregion}\r\n                        description={\"Sub Region: \"}\r\n                      />\r\n                      <Item data={item.capital} description={\"Capital: \"} />\r\n                    </div>\r\n                    <div className=\"details_right\">\r\n                      <Item\r\n                        data={item.topLevelDomain}\r\n                        description={\"Top Level Domain: \"}\r\n                      />\r\n                      <ItemList\r\n                        data={item.currencies}\r\n                        description={\"Currencies: \"}\r\n                      />\r\n                      <ItemList\r\n                        data={item.languages}\r\n                        description={\"Languages: \"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"border_countries\">\r\n                    <CountryProvider\r\n                      countries={data}\r\n                      search={undefined}\r\n                      filter={undefined}\r\n                      load={true}\r\n                      word={\"\"}\r\n                      error={null}\r\n                    >\r\n                      <Borders\r\n                        data={item.borders}\r\n                        description={\"Border Countries: \"}\r\n                      />\r\n                    </CountryProvider>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useContext, MouseEvent } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { CountryContext } from \"./Country\";\r\nimport { DataType } from \"./Custom\";\r\n\r\nconst CardList = () => {\r\n  const navigate = useNavigate();\r\n\r\n  let data = useContext<DataType>(CountryContext);\r\n\r\n  if (data.load) return <p className=\"Loader\">Loading...</p>;\r\n\r\n  if (data.error) return <h1>Error: {data.error}</h1>;\r\n\r\n  const cardClicked = (event: MouseEvent<HTMLButtonElement>) => {\r\n    let name = event.currentTarget.getAttribute(\"id\");\r\n    navigate(`/details/`, { state: { name: name } });\r\n  };\r\n  let word = data.word;\r\n\r\n  let out = data.countries.filter((country) => {\r\n    return word === \"\" ? country : country.name.toLowerCase().includes(word);\r\n  });\r\n\r\n  return (\r\n    <div className=\"card_container\">\r\n      {out.map((country, index: number) => {\r\n        return (\r\n          <button\r\n            className=\"card\"\r\n            onClick={cardClicked}\r\n            key={index}\r\n            id={country.name}\r\n          >\r\n            <div className=\"flag\">\r\n              <img src={country.flag} alt=\"flag\" />\r\n            </div>\r\n            <div className=\"country-details\">\r\n              <div className=\"country_name\">\r\n                <p>{country.name}</p>\r\n              </div>\r\n              <div className=\"country_info\">\r\n                <div className=\"population\">\r\n                  Population: <span>{country.population.toLocaleString()}</span>\r\n                </div>\r\n                <div className=\"region\">\r\n                  Region: <span>{country.region}</span>\r\n                </div>\r\n                <div className=\"capital\">\r\n                  Capital: <span>{country.capital}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </button>\r\n        );\r\n      })}\r\n      <div className=\"spaceShift\"></div>\r\n      <div className=\"spaceShift\"></div>\r\n      <div className=\"spaceShift\"></div>\r\n      <div className=\"spaceShift\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  children?: React.ReactNode;\r\n}\r\ninterface State {\r\n  hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  reset() {\r\n    this.setState({ hasError: false });\r\n  }\r\n\r\n  static getDerivedStateFromError(error: boolean): State {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"errorInfo\">\r\n          <h2>Input does not exist !</h2>\r\n          <p>Clear and reset page</p>\r\n          <button onClick={this.reset}>reset page</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { useState, useRef, useContext } from \"react\";\r\n\r\nimport { CountryContext } from \"./Country\";\r\n\r\nconst FilterButton = () => {\r\n  const [dropdown, setDropdown] = useState(false);\r\n  const buttonRef = useRef<HTMLButtonElement>(null);\r\n  const dropDownRef = useRef<HTMLInputElement>(null);\r\n\r\n  window.addEventListener(\"click\", (e) => {\r\n    if (e.target !== dropDownRef.current && e.target !== buttonRef.current) {\r\n      setDropdown(false);\r\n    }\r\n  });\r\n\r\n  const data = useContext(CountryContext);\r\n\r\n  let region = data.filter;\r\n\r\n  return (\r\n    <div className=\"button_container\">\r\n      <button\r\n        className=\"filter_button\"\r\n        onClick={() => setDropdown(!dropdown)}\r\n        ref={buttonRef}\r\n      >\r\n        <p className=\"filter_text\">Filter by Region</p>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"ionicon\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <title>Chevron Down</title>\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            stroke-width=\"48\"\r\n            d=\"M112 184l144 144 144-144\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      {dropdown && (\r\n        <div\r\n          className=\"dropdown_content\"\r\n          onClick={() => setDropdown(false)}\r\n          ref={dropDownRef}\r\n        >\r\n          <li id=\"Africa\" value=\"africa\" onClick={region}>\r\n            Africa\r\n          </li>\r\n          <li id=\"Americas\" value=\"americas\" onClick={region}>\r\n            Americas\r\n          </li>\r\n          <li id=\"Asia\" value=\"asia\" onClick={region}>\r\n            Asia\r\n          </li>\r\n          <li id=\"Europe\" value=\"europe\" onClick={region}>\r\n            Europe\r\n          </li>\r\n          <li id=\"Oceania\" value=\"oceania\" onClick={region}>\r\n            Oceania\r\n          </li>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import React, { useContext } from \"react\";\r\nimport { CountryContext } from \"./Country\";\r\n\r\nconst SearchButton = () => {\r\n  const value = useContext(CountryContext);\r\n  const search = value.search;\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"search_button\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"ionicon\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <title>Search</title>\r\n          <path\r\n            d=\"M221.09 64a157.09 157.09 0 10157.09 157.09A157.1 157.1 0 00221.09 64z\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-width=\"32\"\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-linecap=\"round\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-width=\"32\"\r\n            d=\"M338.29 338.29L448 448\"\r\n          />\r\n        </svg>\r\n        <input\r\n          type=\"searchg\"\r\n          className=\"search_bar\"\r\n          placeholder=\"Search for a country...\"\r\n          onChange={search}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchButton;\r\n","import React from \"react\";\r\nimport CardList from \"../../Components/CardList\";\r\nimport { CountryProvider } from \"../../Components/Country\";\r\nimport { ErrorBoundary } from \"../../Components/ErrorBoundary\";\r\nimport FilterButton from \"../../Components/FilterButton\";\r\nimport SearchButton from \"../../Components/SearchButton\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\nconst Home = () => {\r\n  const { countries, view, region, search, loading, error, word } = useFetch();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"display_top\">\r\n        <div className=\"filter_container\">\r\n          <CountryProvider\r\n            countries={countries}\r\n            search={search}\r\n            filter={undefined}\r\n            load={loading}\r\n            word={\"\"}\r\n            error={error}\r\n          >\r\n            <SearchButton />\r\n          </CountryProvider>\r\n          <CountryProvider\r\n            countries={countries}\r\n            filter={region}\r\n            search={undefined}\r\n            load={loading}\r\n            word={\"\"}\r\n            error={error}\r\n          >\r\n            <FilterButton />\r\n          </CountryProvider>\r\n        </div>\r\n      </div>\r\n      <div className=\"display_bottom\">\r\n        <ErrorBoundary>\r\n          <CountryProvider\r\n            countries={view}\r\n            filter={undefined}\r\n            word={word}\r\n            search={undefined}\r\n            load={loading}\r\n            error={error}\r\n          >\r\n            <CardList />\r\n          </CountryProvider>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { Header } from \"./Components/Header\";\r\nimport { Details } from \"./pages/Details/Details\";\r\nimport Home from \"./pages/Home/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/Details\" element={<Details />} />\r\n        <Route path=\"/\" element={<Home />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nroot.render(\r\n  <Router>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Router>\r\n\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}